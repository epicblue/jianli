//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JianLi3Data.JianLi3Server {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="JianLi3Server.IStreamed")]
    public interface IStreamed {
        
        // CODEGEN: Generating message contract since the operation UploadFile is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStreamed/UploadFile", ReplyAction="http://tempuri.org/IStreamed/UploadFileResponse")]
        JianLi3Data.JianLi3Server.UploadFileResponse UploadFile(JianLi3Data.JianLi3Server.FileWrapper request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStreamed/DownloadFile", ReplyAction="http://tempuri.org/IStreamed/DownloadFileResponse")]
        System.IO.Stream DownloadFile(string subpath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStreamed/MoveIncontrolFolder", ReplyAction="http://tempuri.org/IStreamed/MoveIncontrolFolderResponse")]
        string MoveIncontrolFolder(string filename, string subpath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStreamed/MoveFileInLib", ReplyAction="http://tempuri.org/IStreamed/MoveFileInLibResponse")]
        string MoveFileInLib(string sourcesubpath, string descsubpath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStreamed/CreateSubfolderInLib", ReplyAction="http://tempuri.org/IStreamed/CreateSubfolderInLibResponse")]
        string CreateSubfolderInLib(string subpath);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FileWrapper", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class FileWrapper {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string FilePath;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileData;
        
        public FileWrapper() {
        }
        
        public FileWrapper(string FilePath, System.IO.Stream FileData) {
            this.FilePath = FilePath;
            this.FileData = FileData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadFileResponse {
        
        public UploadFileResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStreamedChannel : JianLi3Data.JianLi3Server.IStreamed, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StreamedClient : System.ServiceModel.ClientBase<JianLi3Data.JianLi3Server.IStreamed>, JianLi3Data.JianLi3Server.IStreamed {
        
        public StreamedClient() {
        }
        
        public StreamedClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StreamedClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StreamedClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StreamedClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        JianLi3Data.JianLi3Server.UploadFileResponse JianLi3Data.JianLi3Server.IStreamed.UploadFile(JianLi3Data.JianLi3Server.FileWrapper request) {
            return base.Channel.UploadFile(request);
        }
        
        public void UploadFile(string FilePath, System.IO.Stream FileData) {
            JianLi3Data.JianLi3Server.FileWrapper inValue = new JianLi3Data.JianLi3Server.FileWrapper();
            inValue.FilePath = FilePath;
            inValue.FileData = FileData;
            JianLi3Data.JianLi3Server.UploadFileResponse retVal = ((JianLi3Data.JianLi3Server.IStreamed)(this)).UploadFile(inValue);
        }
        
        public System.IO.Stream DownloadFile(string subpath) {
            return base.Channel.DownloadFile(subpath);
        }
        
        public string MoveIncontrolFolder(string filename, string subpath) {
            return base.Channel.MoveIncontrolFolder(filename, subpath);
        }
        
        public string MoveFileInLib(string sourcesubpath, string descsubpath) {
            return base.Channel.MoveFileInLib(sourcesubpath, descsubpath);
        }
        
        public string CreateSubfolderInLib(string subpath) {
            return base.Channel.CreateSubfolderInLib(subpath);
        }
    }
}
